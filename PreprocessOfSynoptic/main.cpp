#include <iostream>#include <fstream>#include <string>#include <vector>using namespace std;vector<string> splitStr(string& s, const string& c) {    string::size_type pos1, pos2;    pos2 = s.find(c);    pos1 = 0;    vector <string> res;    while (string::npos != pos2){        res.push_back(s.substr(pos1, pos2 - pos1));        pos1 = pos2 + c.size();        pos2 = s.find(c, pos1);    }    if(pos1 != s.size()) {        res.push_back(s.substr(pos1));    }    return res;}string trimStr(string & s) {    if(s.empty()) cout<< "string invalid" << endl;    s.erase(0, s.find_first_not_of("\""));    s.erase(s.find_last_not_of("\""));    return s;}int main(int argc, char* argv[]) {    if(access(argv[1], F_OK) != 0){        cout << "file not found" << endl;        return 0;    }    ifstream ifile(argv[1]);    ofstream ofile(argv[2]);    string str;    int count = 0;    vector <string> v ;    while(getline(ifile,str)) {        count ++;        v = splitStr(str, ",");        for(vector<string>::size_type i = 0; i != v.size(); i++) {            if ( i >= 1 && v[i].size() > 0 )                //ofile << trimStr(v[i]) << "\n";                ofile << v[i] << "\n";        }        v.clear();    }    cout << count;    return 0;}